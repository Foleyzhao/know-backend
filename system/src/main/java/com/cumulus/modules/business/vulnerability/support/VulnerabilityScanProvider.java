package com.cumulus.modules.business.vulnerability.support;

import com.cumulus.modules.business.vulnerability.dto.ScanTaskRequest;
import com.cumulus.modules.business.vulnerability.entity.AssetScanResult;
import com.cumulus.modules.business.vulnerability.entity.Scan;
import com.cumulus.modules.business.vulnerability.entity.es.VulnerabilityEs;

import java.util.List;
import java.util.Map;

/**
 * 漏洞扫描接口
 *
 * @author zhaoff
 */
public interface VulnerabilityScanProvider {

    /**
     * 获取支持的扫描产品
     *
     * @return 支持的扫描产品
     */
    String getSupportCode();

    /**
     * 漏扫器创建扫描任务
     *
     * @param request 扫描请求
     * @param ip      扫描资产Ip
     * @return 扫描结果或报告ID
     */
    String createScanTask(ScanTaskRequest request, String ip);

    /**
     * 批量创建扫描任务
     *
     * @param request 扫描任务请求
     * @throws Exception 抛出异常
     */
    void batchAddScanTask(ScanTaskRequest request) throws Exception;

    /**
     * 漏扫器批量创建扫描任务
     *
     * @param request    扫描请求
     * @param scanIpList 扫描资产IP列表
     * @return 扫描结果或报告ID
     */
    String createBatchScanTask(ScanTaskRequest request, List<String> scanIpList);

    /**
     * 继续扫描任务
     *
     * @param request 扫描任务请求
     */
    void resumeTask(ScanTaskRequest request);

    /**
     * 立即停止扫描任务
     *
     * @param request 扫描任务请求
     */
    void stopScanTask(ScanTaskRequest request);

    /**
     * 立即停止扫描任务 无返回值 不管是否成功
     *
     * @param taskId 任务唯一标识
     */
    void stopOneScanTask(Scan scan, String taskId) throws Exception;

    /**
     * 批量获取扫描结果
     *
     * @param request 扫描任务请求
     */
    void batchGetScanResult(ScanTaskRequest request);

    /**
     * 获取任务返回结果
     *
     * @param request 扫描任务内存对象
     * @param asset   资产
     * @return 返回列表
     */
    void getScanResult(ScanTaskRequest request, AssetScanResult asset);

    /**
     * 获取扫描器策略信息
     *
     * @param scanner 扫描器
     * @return 策略信息
     * @throws Exception 抛出异常
     */
    List<Map<String, Object>> getStrategies(Scan scanner) throws Exception;

    /**
     * 对扫描出的结果进行保存
     *
     * @param assetIdList 资产id列表
     * @param vulIp       漏洞的ip （单ip 或者 ip：端口）
     * @param request     漏扫数据
     * @param vulList     漏洞列表
     */
    void saveVulList(ScanTaskRequest request, List<Long> assetIdList, String vulIp, List<VulnerabilityEs> vulList, int vulType);
}
