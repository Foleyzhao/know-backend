package com.cumulus.modules.business.vulnerability.service;


import com.cumulus.modules.business.vulnerability.dto.ScanTaskRequest;
import com.cumulus.modules.business.vulnerability.entity.Scan;

import java.util.List;
import java.util.Map;

/**
 * 漏洞扫描任务服务接口
 *
 * @author zhaoff
 */
public interface ScanTaskService {

    /**
     * 批量创建扫描任务
     *
     * @param request 扫描任务请求
     * @throws Exception 抛出异常
     */
    void batchAddActiveScan(ScanTaskRequest request) throws Exception;

    /**
     * 批量获取扫描任务结果
     *
     * @param request 扫描任务请求
     */
    void batchGetScanResult(ScanTaskRequest request);

    /**
     * 获取扫描器策略信息
     *
     * @param scanner 扫描器
     * @return 扫描器ID
     * @throws Exception 异常
     */
    List<Map<String, Object>> getStrategies(Scan scanner) throws Exception;

    /**
     * 获取扫描器
     *
     * @return 扫描器ID
     */
    List<Map<String, Object>> getName();

    /**
     * 尝试结束任务
     *
     * @param planId 任务id
     * @return 返回是否结束成功
     */
    boolean tryUpdateTaskStatusEnd(Long planId);

    /**
     * 暂停整个任务
     *
     * @param planId 任务id
     * @return 返回是否结束成功
     */
    void updateTaskStatusPause(Long planId);

    /**
     * 重新开始任务
     *
     * @param planId 任务id
     * @return 返回是否结束成功
     */
    void updateTaskStatusRestart(Long planId);

    /**
     * 出现错误结束任务
     *
     * @param planId               任务id
     * @param scanResultResultCode 扫描结果对象的结果码
     * @param assetScanResultCode  单个扫描结果对象的结果码
     */
    void updateTaskStatusErrorEnd(Long planId, Integer scanResultResultCode, Integer assetScanResultCode);

}
