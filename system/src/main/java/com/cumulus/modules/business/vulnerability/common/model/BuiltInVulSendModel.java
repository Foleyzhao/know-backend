package com.cumulus.modules.business.vulnerability.common.model;

import com.alibaba.fastjson.JSONException;
import com.alibaba.fastjson.JSONObject;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.apache.commons.lang3.StringUtils;

import java.io.Serializable;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 发送的引擎实体结构
 *
 * @author : shenjc
 */
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
public class BuiltInVulSendModel implements Serializable {

    private static final long serialVersionUID = -332740391102999913L;

    /**
     * 默认类型
     */
    public static final String DEFAULT_TYPE = "task";

    /**
     * 扫描类型 web/host
     */
    public static final String TARGET_TYPE_HOST = "host";
    public static final String TARGET_TYPE_WEB = "web";

    /**
     * 扫描类型 web/host
     */
    public static final String FINGERPRINT_TYPE_TCP = "tcp";
    public static final String FINGERPRINT_TYPE_UDP = "udp";


    /**
     * 任务id
     */
    private String id;

    /**
     * 默认task
     */
    private String type;

    /**
     * 目标IP web为网址
     */
    private String targets;

    /**
     * 扫描类型 web/host
     */
    private String targetType;

    /**
     * 是否进行poc扫描
     */
    private boolean pocScan;

    /**
     * 是否进行版本扫描
     */
    private boolean versionMatch;

    /**
     * 是否进行弱口令扫描
     */
    private boolean weakPassBrute;

    /**
     * 指纹信息
     */
    private Fingerprint fingerprint;

    /**
     * 指纹信息
     *
     * @author shenjc
     */
    @Getter
    @Setter
    @AllArgsConstructor
    @NoArgsConstructor
    public static class Fingerprint {

        /**
         * 指纹信息的tcp
         */
        private Map<String, FingerprintDetail> tcp = new HashMap<>();

        /**
         * 指纹信息的udp
         */
        private Map<String, FingerprintDetail> udp = new HashMap<>();
    }

    /**
     * 指纹详情
     *
     * @author shenjc
     */
    @Getter
    @Setter
    @AllArgsConstructor
    @NoArgsConstructor
    public static class FingerprintDetail {

        /**
         * 指纹名称
         */
        private String name;

        /**
         * 指纹产品
         */
        private String product;

        /**
         * 指纹版本
         */
        private String version;

        /**
         * cpe编号
         */
        private List<String> cpe;

        /**
         * 存入cpe 由String 转list
         *
         * @param cpeStr 字符串
         */
        public void setCpe(String cpeStr) {
            List<String> cpe = null;
            if (StringUtils.isNotBlank(cpeStr)) {
                try {
                    cpe = JSONObject.parseArray(cpeStr, String.class);
                } catch (JSONException e) {
                    cpe = Collections.singletonList(cpeStr);
                }
            }
            this.cpe = cpe;
        }
    }
}
