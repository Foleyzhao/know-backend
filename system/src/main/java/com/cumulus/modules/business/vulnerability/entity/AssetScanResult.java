package com.cumulus.modules.business.vulnerability.entity;

import com.cumulus.mysql.userType.JsonType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import lombok.Getter;
import lombok.Setter;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import java.io.Serializable;
import java.util.List;
import java.util.Map;

/**
 * 资产扫描结果
 *
 * @author zhaoff
 */
@Getter
@Setter
@Entity
@Table(name = "tbl_vulnerability_scan_result_asset")
@JsonInclude(Include.NON_EMPTY)
public class AssetScanResult implements Serializable {

    private static final long serialVersionUID = -8462113721045011125L;

    /**
     * 0：未开始 1：扫描中 2：暂停 3：结束
     */
    public static final int STATUS_NOT_STARTED = 0;
    public static final int STATUS_SCANNING = 1;
    public static final int STATUS_PAUSE = 2;
    public static final int STATUS_END = 3;

    /**
     * 扫描结果： 0：未开始 1：扫描中 2、成功 3、失败
     */
    public static final int RESULT_NOT_STARTED = 0;
    public static final int RESULT_RUNNING = 1;
    public static final int RESULT_SUCCESS = 2;
    public static final int RESULT_FAIL_CANCEL = 3;
    public static final int RESULT_FAIL_PROJECT_RESTART = 4;
    public static final int RESULT_FAIL_PROCESSING_ERROR = 5;
    public static final int RESULT_FAIL_TIME_OUT = 6;

    /**
     * 失败原因：0：采集器不存在 1：创建扫描任务失败 2：平台重启
     */
    public static final int FAIL_TYPE_SCAN_NOT_EXIST = 0;
    public static final int FAIL_TYPE_CREAT_TASK_ERROR = 1;
    public static final int FAIL_TYPE_PROJECT_RESTART = 2;

    /**
     * ID
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * 扫描资产 IP
     */
    private String ip;

    /**
     * 0：未开始 1：扫描中 2：暂停 3：停止
     */
    private Integer status;

    /**
     * 扫描结果： 0：未开始 1：扫描中 2、成功 3、失败
     */
    private Integer result;

    /**
     * 扫描器上的扫描结果ID 是第三方扫描器给的值需要根据这个值去找结果
     */
    private String taskId;

    /**
     * 扫描计划和扫描结果对应关系
     */
    @ManyToOne
    @JoinColumn(name = "scan_result_id", nullable = false)
    private ScanResult scanResult;

    /**
     * 获得的漏洞id es的id列表
     */
    @Type(type = JsonType.JSON_TYPE_CLASS_PATH, parameters = {
            @Parameter(name = "type", value = "LIST"),
            @Parameter(name = "element", value = "java.lang.String")
    })
    private List<String> vulnerabilityIdList;

    /**
     * 扩展信息 { "reason":"", "type":x, //失败类型，0:创建任务失败 1:获取扫描结果失败 }
     */
    @Type(type = JsonType.JSON_TYPE_CLASS_PATH)
    private Map<String, Object> extra;
}
