package com.cumulus.modules.business.vulnerability.service;

import com.cumulus.modules.business.vulnerability.entity.ScanResult;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.util.MultiValueMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.List;

/**
 * @author : shenjc
 */
public interface ScanResultService {

    /**
     * 根据任务新增一个扫描结果
     *
     * @param planId 任务id
     * @return 返回新增的扫描结果对象
     */
    ScanResult saveScanResultByPlan(Long planId);

    /**
     * 修改扫描任务结果的状态
     *
     * @param scanResultId 扫描任务结果id
     * @param result       修改的状态
     */
    void updateScanResultStatus(Long scanResultId, Integer result);

    /**
     * 分页获取扫描计划
     *
     * @param pageable 分页参数
     * @param params   查询参数
     * @return 扫描计划
     */
    Page<ScanResult> page(Pageable pageable, MultiValueMap<String, String> params);

    /**
     * 生成导出报告的EXCEL
     *
     * @param resultList 数据列表
     * @param filePath 保存的文件路径
     * @return 扫描计划
     */
    boolean exportZip(List<ScanResult> resultList, String filePath);

    /**
     * 根据扫描结果id获取漏洞信息
     *
     * @param scanResultId 扫描结果id
     * @param request      请求头
     * @param response     相应头
     */
    void downloadVulReport(Long scanResultId, HttpServletRequest request, HttpServletResponse response);

    /**
     * 生成 报告文件
     *
     * @param scanResultId 扫描结果id（不一定存在）
     * @param planId       任务id（必定存在任务id）
     */
    void generateReportFile(Long scanResultId, Long planId);
}
