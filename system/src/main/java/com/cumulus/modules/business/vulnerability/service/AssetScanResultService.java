package com.cumulus.modules.business.vulnerability.service;

import com.cumulus.modules.business.vulnerability.entity.AssetScanResult;

import java.util.List;
import java.util.Map;

/**
 * 单个任务结果表 接口
 *
 * @author : shenjc
 */
public interface AssetScanResultService {

    /**
     * 设置资产扫描失败的原因
     *
     * @param ip           扫描失败的资产ip
     * @param scanResultId 扫描结果id
     * @param vulIdList    漏洞id列表
     */
    void updateEndAssetScanReason(String ip, Long scanResultId, List<String> vulIdList);

    /**
     * 设置资产扫描失败的原因
     *
     * @param ip           扫描失败的资产ip
     * @param scanResultId 扫描结果id
     * @param scanResult   扫描结果
     * @param failType     失败类型
     * @param extra        额外信息
     */
    void updateErrorAssetScanReason(String ip, Long scanResultId, Integer scanResult, Integer failType,
                                    Map<String, Object> extra);

    /**
     * 设置资产扫描状态信息
     *
     * @param ip           资产IP
     * @param scanResultId 扫描结果id
     * @param status       资产扫描状态
     * @param result       资产扫描结果
     * @param extra        额外信息
     */
    void updateAssetScanStatus(String ip, Long scanResultId, Integer status, Integer result, Map<String, Object> extra, List<String> vulIdList);

    /**
     * 根据任务id 生成单个扫描资产的结果列表
     *
     * @param planId 任务id
     */
    void createAssetScanResultList(Long planId);

    /**
     * 根据网址 生成单个扫描资产的结果列表 并不是所有漏扫都用网址进行扫描
     *
     * @param scanResultId 扫描结果id
     * @param webSite      网址信息
     */
    void createAssetScanResultWebSit(String webSite, Long scanResultId);

    /**
     * 根据扫描结果id查询单个的资产扫描结果
     *
     * @param scanResultId 扫描结果
     * @return 返回列表
     */
    List<AssetScanResult> findAllByScanResultId(Long scanResultId);

    /**
     * 根据扫描结果id查询单个的资产扫描结果
     *
     * @param scanResultId 扫描结果
     * @return 返回列表
     */
    Integer countAllByScanResultAndResultEnd(Long scanResultId);

    /**
     * 根据扫描结果id查询单个的资产扫描结果
     *
     * @param scanResultId 扫描结果
     * @return 返回列表
     */
    Integer countAllByScanResultAndResultScanning(Long scanResultId);

    /**
     * 根据ip和扫描结果id查询单个扫描结果
     *
     * @param ip           ip
     * @param scanResultId 扫描结果id
     * @return 返回结果
     */
    AssetScanResult findByIpAndScanResultId(String ip, Long scanResultId);
}
