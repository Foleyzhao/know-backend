package com.cumulus.modules.business.vulnerability.service;

import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.servlet.http.HttpServletResponse;

import com.cumulus.modules.business.vulnerability.dto.VulnerabilityCountDto;
import com.cumulus.modules.business.vulnerability.dto.VulnerabilityDto;
import com.cumulus.modules.business.vulnerability.dto.VulnerabilityQueryDto;
import com.cumulus.modules.business.vulnerability.entity.es.VulnerabilityEs;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.multipart.MultipartFile;

/**
 * 漏洞服务接口
 *
 * @author zhangxq
 */
public interface VulnerabilityEsService {

    /**
     * 上传excel
     *
     * @param file excel
     * @return 待添加漏洞
     */
    List<VulnerabilityDto> upload(MultipartFile file);

    /**
     * 导入待添加漏洞
     *
     * @param dtoList 漏洞列表
     * @return 添加结果
     */
    List<VulnerabilityDto> importVulnerability(List<VulnerabilityDto> dtoList);

    /**
     * 手动新增
     *
     * @param vulnerabilityEs 漏洞对象
     */
    void create(VulnerabilityEs vulnerabilityEs);

    /**
     * 查询漏洞清单
     *
     * @param dto 查询参数
     * @return 漏洞列表
     */
    Page<VulnerabilityEs> query(VulnerabilityQueryDto dto,boolean isReport);


    /**
     * 批量导出
     *
     * @param ids      id列表
     * @param all      是否全部
     * @param response resp
     */
    void export(Set<String> ids, boolean all, String fileName, HttpServletResponse response);

    /**
     * 根据漏洞类型和ip更新漏洞为非最新
     *
     * @param vulCategory 漏洞类型
     * @param ip          ip
     */
    void updateLatestByVulCategoryAndId(Integer vulCategory, String ip);

    /**
     * 漏洞清单统计
     *
     * @param vulCategory 漏洞类型
     * @return 统计数据传输对象
     */
    VulnerabilityCountDto countVulnerability(Integer vulCategory);

    /**
     * 漏洞频次排名
     *
     * @param dateType 参数
     * @return 结果集
     */
    List<Map<String, Long>> countVulNumber(Integer dateType);

    /**
     * 根据id查询
     *
     * @param id id
     * @return 漏洞
     */
    VulnerabilityEs findById(String id);

    /**
     * 根据ip查询风险
     *
     * @param ip       ip
     * @param pageable 分页参数
     * @return 风险详情
     */
    Object findByIp(String ip, Pageable pageable);

    /**
     * 更新用同时更新 updateTime 和 updateBy
     *
     * @param vul 漏洞信息
     */
    void saveById(VulnerabilityEs vul);
}
