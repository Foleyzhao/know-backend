package com.cumulus.modules.business.vulnerability.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.cumulus.modules.business.dto.BatchPackage;
import com.cumulus.modules.business.vulnerability.dto.RiskReportDto;
import com.cumulus.modules.business.vulnerability.service.RiskReportService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * 风评报告控制层
 *
 * @author zhangxq
 */
@RestController
@RequestMapping("/api/riskReport")
public class RiskReportController {

    /**
     * 风评报告服务
     */
    @Autowired
    private RiskReportService reportService;

    /**
     * 查询所有
     *
     * @param pageable 分页参数
     * @return 报告列表
     */
    @GetMapping("/query")
    public ResponseEntity<Object> queryAll(Pageable pageable) {
        return new ResponseEntity<>(reportService.query(pageable), HttpStatus.OK);
    }

    /**
     * 新增报表
     *
     * @param dto 风评报告数据传输对象
     * @return 结果
     */
    @PostMapping("/create")
    public ResponseEntity<Object> create(@RequestBody RiskReportDto dto) {
        reportService.addReport(dto);
        return new ResponseEntity<>("", HttpStatus.OK);
    }

    /**
     * 删除根据id
     *
     * @param id id
     * @return 删除结果
     */
    @DeleteMapping("/del")
    public ResponseEntity<Object> delete(Long id) {
        reportService.delById(id);
        return new ResponseEntity<>("", HttpStatus.OK);
    }

    /**
     * 批量删除
     *
     * @param batchPackage 批量参数
     * @return 删除结果
     */
    @DeleteMapping("/delBatch")
    public ResponseEntity<Object> deleteBatch(@RequestBody BatchPackage batchPackage) {
        reportService.delBatch(batchPackage);
        return new ResponseEntity<>("", HttpStatus.OK);
    }

    /**
     * 下载文件
     *
     * @param dto
     * @param response
     * @param request
     * @return
     */
    @PostMapping("/download")
    public void download(@RequestBody RiskReportDto dto, HttpServletResponse response,
                                           HttpServletRequest request) {
        reportService.downloadFile(request, response, dto);
    }

    /**
     * 下载文件
     *
     * @param dto
     * @param response
     * @param request
     * @return
     */
    @PostMapping("/view")
    public void view(@RequestBody RiskReportDto dto, HttpServletResponse response,
                                           HttpServletRequest request) {
        reportService.viewFile(request, response, dto);
    }
}
