package com.cumulus.modules.business.vulnerability.entity;

import java.io.Serializable;
import java.sql.Timestamp;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import com.cumulus.base.BaseEntity;
import com.fasterxml.jackson.annotation.JsonInclude;
import lombok.Getter;
import lombok.Setter;
import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

/**
 * 风险报告实体
 *
 * @author zhangxq
 */
@Getter
@Setter
@Entity
@Table(name = "tbl_risk_report")
@DynamicUpdate
@DynamicInsert
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class RiskReport extends BaseEntity implements Serializable {

    private static final long serialVersionUID = -1516546754984804074L;

    /**
     * 资产类型
     */
    public static final int TYPE_HOST = 1;
    public static final int TYPE_WEB = 2;
    public static final int TYPE_ALL = 3;

    /**
     * 资产范围
     */
    public static final int RANGE_SINGLE = 1;
    public static final int RANGE_DEPT = 2;
    public static final int RANGE_ALL = 3;

    /**
     * 状态
     */
    public static final int STATUS_RUNNING = 0;
    public static final int STATUS_DONE = 1;
    public static final int STATUS_FAIL = 2;

    /**
     * id
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * 报表名称
     */
    @Column(name = "[name]")
    private String name;

    /**
     * 漏洞类型 1 主机 2 应用 3 全部
     */
    private Integer type;

    /**
     * 资产范围  1-按单个资产，2-按部门，3-全部资产
     */
    @Column(name = "[range]")
    private Integer range;

    /**
     * 范围列表 单个资产为资产id 按部门为 部门id
     */
    private String rangeList;

    /**
     * 开始时间
     */
    private Timestamp startTime;

    /**
     * 结束时间
     */
    private Timestamp endTime;

    /**
     * 状态 0 正在生成 1 完成 2 失败
     */
    private Integer status;

    /**
     * 文件名
     */
    private String fileName;

}
