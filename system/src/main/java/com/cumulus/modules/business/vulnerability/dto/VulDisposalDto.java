package com.cumulus.modules.business.vulnerability.dto;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import java.util.List;

/**
 * 风险处置数据传输对象
 *
 * @author : shenjc
 */
@NoArgsConstructor
@AllArgsConstructor
@Getter
@Setter
public class VulDisposalDto {

    /**
     * 必须要 漏洞id列表
     */
    @NotNull(groups = {single.class, batch.class}, message = "需要漏洞id")
    @NotEmpty(groups = {single.class, batch.class}, message = "需要漏洞id")
    private List<String> vulIdList;

    /**
     * 全部操作是必须要
     */
    @NotNull(groups = {all.class}, message = "需要查询条件")
    private VulnerabilityQueryDto vulDto;

    /**
     * + 某些操作必要 原因
     */
    private String reason;

    /**
     * + 某些操作必要 操作的用户
     */
    private Long handleUser;

    /**
     * + 某些操作必要 漏洞对象上的下个状态
     */
    private Integer vulHandleStatus;

    /**
     * 必须要 漏洞历史的操作方式 比如提交复测是个 vulActionCode 但是 复测通过(3)和不通过(0) 是 vulHandleStatus
     */
    @NotNull(groups = {single.class, batch.class, all.class}, message = "需要操作码")
    private Integer vulActionCode;

    /**
     * 单个
     */
    public @interface single {
    }

    /**
     * 批量
     */
    public @interface batch {
    }

    /**
     * 全部
     */
    public @interface all {
    }
}
